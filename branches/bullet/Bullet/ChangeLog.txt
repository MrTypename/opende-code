Bullet Continuous Collision Detection and Physics Library
Erwin Coumans

2007 March 21
	- Fixed issues: comma at end of enum causes errors for some compilers
	- Fixed initialization bug in LocalRayResult (	m_localShapeInfo(localShapeInfo) )
	
2007 March 20
	- Added refit tree to quantized stackless tree, and updated ConcaveDemo as example.
	
2007 March 17
	- Added constraint solver optimizations, avoiding cross products during iterations, and gather rigidbody/constraint info in contiguous memory (btSolverBody/btSolverConstraint)
	- These optimizations don't give large benefit yet, but it has good potential. Turned on by default. Can be switched off using solver->setSolverMode(SOLVER_RANDMIZE_ORDER).
	- Enabled anti-jitter for rigid bodies. This is experimental, and can be switched off by setting a global (it is experimental so no proper interface) gJitterVelocityDampingFactor = 1.0;
	- Fixed bug in islandmanifold.heapSort(btPersistentManifoldSortPredicate()); , thanks Noehrgel for reporting this (affected Sun Solaris)
	
2007 March 12
	- Added compile-time toggle between on 16-bit and 32-bit fixed-point SAP broadphase. 
		This allows the number of bodies to exceed 32767
	- Enable useQuantizedAabbCompression on btTriangleMesh, see ColladaDemo
	
2007 March 8
	- Fixed bug in constraint/island sorting (caused by replacing STL by dedicated btAlignedObjectArray with heapSort)
		Thanks Clemens Unterkofler for pointing this out!

2007 March 6
	- removed STL from the Bullet library: replace std::vector by btAlignedObjectArray. Also removed the std::set for overlapping pair set, and turned it into an overlapping pair array. The SAP only adds objects, never removed. Removal is postponed for during traversal of overlapping pairs (duplicates and non-overlapping pairs are removed during that traversal).
	- added heap sort and binary search/linear search to btAlignedObjectArray
	- fixed wrong cast, thanks Hamstray, http://www.continuousphysics.com/Bullet/phpBB2/viewtopic.php?t=1015


2007 Feb 25
	- Improved performance of convex collision shapes, cache local AABB instead of recomputation. This fixes issue with very slow performance in larger .bsp levels
	
2007 Feb 24
	- Added compressed/quantized AABB tree, 16 bytes per node, while supporting 32-bit (triangle) indices. 
	  Should be faster and smaller then original version (quantized aabb check is done in integer space)
		Original aabb tree nodes are still supported. They are 44 bytes, with full floating point precision and additional subPart index.
	- added meter-unit scaling support in ColladaConverter.cpp

2007 Feb 21
	- Build system: updated bullet.pc.in library names
	- Updated EPA comparison integration (missing parameter)
	
2007 Jan 04
	- fixed optimized AABB tree building: in some cases the tree building fails due to unbalanced trees, which generated stack overflow
	
2006 Dec 15
	- added contribution to allow double precision collision detection/dynamics. Define BT_USE_DOUBLE_PRECISION in your project and libraries that include Bullet

2006 Dec 14
	- merged contact and non-contact constraint solving into one loop, will improve stability of jointed bodies during collisions
	- added first draft for hingeConstraint motor
	
2006 Dec 8, Erwin Coumans
	- preparation for SIMD: added btAlignedAllocator and btAlignedObjectArray, to replace stl std::vector, same interface, but compatible with 16 byte alignment
	- cleaned up dependencies in autogenerated msvc projectfiles
	- aligned btVector3 on 16 bytes boundary, under win32. see if developers will come up with problems

2006 Dec 04, Erwin Coumans
	Added btNearCallback. This is similar to Open Dynamics Engine (ODE) dNearCallback, but important differences:
	- contact points are persistent (lifetime more then one frame, for warmstarting/incremental contact point management)
	- continuous collision detection, time of impact
	Added btRigidBody::isInWorld(), returns true if btRigidBody is inside a btCollisionWorld/btDynamicsWorld derived class
	Added angularFactor to btRigidbody, this helps some character control (no angular impulse applied)


2006 Nov 28
	Moved StackAlloc from EPA into LinearMath/btStackAlloc
	renamed internal class ConcaveShape into btConcaveShape
	added btHeightfieldTerrainShape (not completed yet)
		
2006 Nov 15 Nathanael Presson
	Added EPA penetration depth algorithm, Expanding Polytope Algorithm
	Added Pierre Terdiman penetration depth comparison/test DEMO
	Fixed Bullet's Minkowski sampling penetration depth solver
	Contributed by Nathanael Presson
	
2006 Nov 11 Francisco León Nájera
	Added GIMPACT trimesh collision detection: concave versus concave,
	Contributed by Francisco León Nájera

2006 Nov 2
	Minor refactoring: btCollisionObject changes from struct into class, added accessor methods
	Force use of btMotionState to synchronize graphics transform, disabled old btRigidBody constructor that accepts btTransform
	Renamed treshold into threshold throughout the code
	
2006 Oct 30
	Enable decoupling of physics and graphics framerate using interpolation and internal fixed timestep, based on btMotionState
	Enabled raycast vehicle demo (still needs tuning)
	Refresh contact points, even when they are already persistent.
	Fixed debugDraw colors (thanks pc0de for reporting)
	Use Dispatcher in ConcaveConvexCollisionAlgorithm (so it uses the registered collision algorithm, not hardcoded convexconcave)
	Improved performance of constraint solver by precalculating the cross product/impulse arm
	Added collision comparison code: ODE box-box, also sphere-triangle
	Added safety check into GJK, and an assert for AABB's that are very large
	Fixed kinematic support (deriving velocities for animated objects)
	Updated comparison/optional quickstep solver in Extras
	UserCollisionAlgorithm demonstrates btTriangleMesh usage (easier trimesh compared to index array version)
	Removed scaling from btTransform (we only want to deal with rigid transforms)
	
2006 Oct 4
	Fixed minor leak in btOptimizeBVH
	Cleanup of btRigidBody construction
	added getW() in btQuaternion
	assert when setLinearVelocity is called on btRigidBody
	renamed projectfile library from collada-dom to colladadom (to make VC6 happy)
	
2006 Sept 27
	Big Refactoring: renamed and moved files, create a replacement for CcdPhysicsEnvironment/CcdPhysicsController.
	All Bullet classes in LinearMath, BulletCollision and BulletDynamics start with bt, and methods start with lowercase.
	Moved classes into src folder, which is the only include folder needed.
	Added 2 headerfiles in src: btBulletCollisionCommon.h and btBulletDynamicsCommon.h

2006 Sept 23
	Fixed 2 bugs, causing crashes when removing objects. Should do better unit-testing. UnionFind and 3D SAP were involved.
	
2006 Sept 19
	Allow programmable friction and contact solver model. User can register their own functions for several interaction types.
	Improved performance, and removed hardcoded maximum overlaps (switched from C-array to stl::set)
	
2006 Sept 16
	Added Bullet 2.0  User Manual
	Allow registration of custom user collision algorithms

2006 Sept 10
	Started cleaning up demos
	
2006 Sept 4
	Fixed concave collision bug (caused instability/missing collisions in meshes/compounds)
	Fixed memoryleak in OptimizedBvh, added RayTestSingle to CollisionWorld
	Prepared for VehicleDemo
	Increased Performance (island generation for sleeping objects took too much time)
	Better COLLADA 1.4.1 physics conformance in ColladaDemo

2006 August 11
	Added Quake BspDemo
	Improved CCD for compound and non-convex objects

2006 August 10
	Added per-triangle material (friction/restitution) support for non-convex meshes. See ConcaveDemo for usage.

2006 August 9
	Added CMake support (see http://cmake.org)
	This can autogenerate makefiles, projectfiles cross platform (including MacOS X Xcode )
	Just run cmake . in the root folder and it will autogenerate build files
	
2006 July 26 Erwin Coumans
	Upgraded to COLLADA-DOM 1.4.1, latest SVN version
	ColladaDemo can export snapshots to .dae
	
2006 July 24 Erwin Coumans
	Added Compound CollisionShape support
	(this is still low performance -> requires stackless tree-versus-tree traversal for better performance)

2006 July 15 Erwin Coumans
	Added initial support for Parallel execution (collision detection, constraint solving)
	See ParallelPhysicsEnvironment in Extras\PhysicsInterface\CcdPhysics
	
2006 July 10 Erwin Coumans
	Added MacOS X support (some build issues mainly)
		
2006 July 5 Erwin Coumans
	Improved COLLADA 1.4 physics import, both COLLADA-DOM and FCollada

2006 June 29 Erwin Coumans
	Refactoring of the broadphase
	Moved some optional files to Extras: Algebraic ccd and EPA, quickstep
	Moved the limits on bodies/overlap to 32k and 65k
	
2006 June 25 Erwin Coumans
	Added basic Collision Filtering, during broadphase
	Allow adding meshes to the TriangleIndexVertexArray,
	(input for TriangleMeshShape) 
	Preparation for CompoundShape

2006 June 19 Erwin Coumans
	Added support for COLLADA Physics Import.
	Both jam and Visual Studio can compile ColladaDemo

2006 June 18 Dirk Gregorius <dirk@dirkgregorius.de>
	Started implementing Generic6DOF joint and setup basic interface


2006 June 17 Frank Richter <resqu@gmx.ch>
	Bumped version in configure.ac to 1.5.6 (assuming that "1.5f" is
	  the next version released).
	Updated files in mk/autoconf and mk/jam with copies from CS; fixes a 
	  GLU detection issue on MinGW.
	Set msvc/bullet_ico.ico as the default application icon.
	Disabled exceptions for gcc builds.
	Applied a patch from Michael D. Adams to fix a warning with gcc.
2006 jUNE 16 Erwin Coumans
	Constraints now merge simulation islands.

2006 May 24
	Improved GJK accuracy, fixed GjkConvexCast issue, thanks to ~MyXa~ for reporting
	
2006 May 19
	Added restitution support
	Moved out Friction and Dynamics info from ManifoldPoint (removed logical dependency)
	Added a void* m_userPersistentData in ManifoldPoint.
	Added a ContactDestroyedCallback, to allow user to handle destruction of m_userPersistentData

2006 May 13
	Fixed some bugs in friction / jacobian calculations. Reported by Dirk Gregorius. Thanks!

2006 May 9
	Fixed raycasting filtering
	Moved repository to SVN at https://svn.sourceforge.net/svnroot/bullet
		
2006 April 27
	Moved raycasting to CollisionWorld, to make it more generic
	Added basic CCD option in the CcdCollisionDemo
	Fixed 'noResponse' mode, for triggering rigidbodies (useful for Artificial Intelligence queries)
	Improved Bullet/ODE sample (in Extras)
		
2006 April 10
	Separating Axis Test (SAT) convex hull collision detector, contribution by Simon Hobbs
	Added SIMD SSE Math classes (for above SAT)
	Added Mouse picking in CcdPhysicsDemo
	Improved penetration depth estimation in MinkowskiPenetrationDepthSolver, both accuracy and performance
	Added Hinge constraint
	Added quickprof profiling (see http://sourceforge.net/projects/quickprof )
		
2006 March 21 Frank Richter <resqu@gmx.ch>
	Removed VC manifest files.
	Removed superfluous "grpplugins" projects.

2006 March 20 Erwin Coumans
	Clamped the acculumated impulse rather then intermediate impulse (within the iteration)
	Use the persistent contacts for reusing the impulse
	Separated friction and normal solving for better stability
	Decreased the default number of iterations of the constraint solver from 10 to 4

2006 March 19 Frank Richter <resqu@gmx.ch>
	Removed a couple of CSisms from the VC projects.
	Fixed VC include & lib paths to go to the Addtional* options
	  instead the command line arguments.
	Added pkgconfig support.

2006 March 14 Frank Richter <resqu@gmx.ch>
	Added support for shipped GLUT on MinGW.
	Fixed GLUT support on MinGW.

2006 March 13 Frank Richter <resqu@gmx.ch>
	Bolted on Jam-based build system.
	Generated VC project files.
	Fixed GCC warnings.
	Fixed Linux build issues.

2006 March 13
Added 3D Sweep and Prune Broadphase Collision Detection, Contribution from Simon Hobbs.

2006 March 2
	Minor change in license to ZLib/LibPNG
	This makes it legally a bit easier to deploy on Playstation 3
	Prepared for more generic constraints, added ConstraintsDemo

2006 Feb 23
	Rearranged files and dependencies to allow for easier standalone Collision Detection without Bullet Dynamics.
	See Demos/CollisionInterfaceDemo and Extras/ode/ode/test/test_BulletGjk.cpp for examples how to use.


... todo: add history

2003 Initial version (continuous collision detection)
